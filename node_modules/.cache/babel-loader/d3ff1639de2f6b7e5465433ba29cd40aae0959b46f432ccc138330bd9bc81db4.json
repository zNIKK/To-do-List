{"ast":null,"code":"var _jsxFileName = \"C:\\\\Linguagens\\\\Projetos\\\\001-JS_Projects\\\\Todo_list\\\\todo-list\\\\src\\\\components\\\\Header.js\";\nimport React, { Component } from 'react';\nimport DarkMode from './darkMode';\nimport Form from './forms';\nimport List from \"./List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Header extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      novaTarefa: '',\n      tarefas: []\n    };\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        tarefas\n      } = this.state;\n      let {\n        novaTarefa\n      } = this.state;\n      novaTarefa = novaTarefa.trim();\n      if (tarefas.indexOf(novaTarefa) !== -1) return;\n      const novasTarefas = [...tarefas];\n      this.setState({\n        tarefas: [...novasTarefas, novaTarefa]\n      });\n    };\n    this.handleChange = e => {\n      this.setState({\n        novaTarefa: e.target.value\n      });\n    };\n  }\n  componentDidMount() {\n    const tarefas = JSON.parse(localStorage.getItem('tarefas'));\n    if (!tarefas) return;\n    this.setState({\n      tarefas\n    });\n  }\n  componentDidUpdate(prevState) {\n    const {\n      tarefas\n    } = this.state;\n    if (tarefas === prevState.tarefas) return;\n    localStorage.setItem(\"tarefas\", JSON.stringify(tarefas));\n  }\n  handleDelete(e, index) {\n    const {\n      tarefas\n    } = this.state;\n    const novasTarefas = [...tarefas];\n    novasTarefas.splice(index, 1);\n    this.setState({\n      tarefas: [...novasTarefas]\n    });\n  }\n\n  // const [stateSend, setStateSend] = useState()\n  render() {\n    const {\n      novaTarefa,\n      tarefas\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"TODO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkMode, {\n          darkMode: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handleSubmit: this.handleSubmit,\n        handleChange: this.handleChange,\n        novaTarefa: this.novaTarefa\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        tarefas: tarefas,\n        handleDelete: this.handleDelete(tarefas)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","DarkMode","Form","List","Header","state","novaTarefa","tarefas","handleSubmit","e","preventDefault","trim","indexOf","novasTarefas","setState","handleChange","target","value","componentDidMount","JSON","parse","localStorage","getItem","componentDidUpdate","prevState","setItem","stringify","handleDelete","index","splice","render"],"sources":["C:/Linguagens/Projetos/001-JS_Projects/Todo_list/todo-list/src/components/Header.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport DarkMode from './darkMode';\r\nimport Form from './forms';\r\nimport List from \"./List\";\r\nexport default class Header extends Component {\r\n    state = {\r\n        novaTarefa: '',\r\n        tarefas: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const tarefas = JSON.parse(localStorage.getItem('tarefas'));\r\n\r\n        if(!tarefas) return;\r\n\r\n        this.setState({tarefas})\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        const {tarefas} = this.state;\r\n\r\n        if (tarefas === prevState.tarefas) return;\r\n\r\n        localStorage.setItem(\"tarefas\", JSON.stringify(tarefas))\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { tarefas } = this.state;\r\n        let { novaTarefa } = this.state;\r\n\r\n        novaTarefa = novaTarefa.trim();\r\n\r\n        if(tarefas.indexOf(novaTarefa) !== -1) return;\r\n        const novasTarefas = [...tarefas];\r\n\r\n        this.setState({\r\n            tarefas: [ ...novasTarefas, novaTarefa],\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            novaTarefa: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleDelete(e, index) {\r\n        const { tarefas } = this.state;\r\n        const novasTarefas = [...tarefas];\r\n        novasTarefas.splice(index, 1)\r\n\r\n        this.setState({\r\n            tarefas: [...novasTarefas],\r\n        })\r\n    }\r\n\r\n    // const [stateSend, setStateSend] = useState()\r\n    render() {\r\n        const { novaTarefa, tarefas } = this.state;\r\n\r\n        return (\r\n            <div className='header'>\r\n                <div className='bg-header'>\r\n                    <h1>TODO</h1>\r\n                    <DarkMode darkMode={false}></DarkMode>\r\n                </div>\r\n                <Form\r\n                handleSubmit={this.handleSubmit}\r\n                handleChange={this.handleChange}\r\n                novaTarefa={this.novaTarefa}\r\n                ></Form>\r\n                \r\n                <List \r\n                tarefas={tarefas} \r\n                handleDelete={this.handleDelete(tarefas, )}></List>\r\n      \r\n            </div>\r\n\r\n            \r\n        );\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAC1B,eAAe,MAAMC,MAAM,SAASJ,SAAS,CAAC;EAAA;IAAA;IAAA,KAC1CK,KAAK,GAAG;MACJC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE;IACb,CAAC;IAAA,KAiBDC,YAAY,GAAIC,CAAC,IAAK;MAClBA,CAAC,CAACC,cAAc,EAAE;MAClB,MAAM;QAAEH;MAAQ,CAAC,GAAG,IAAI,CAACF,KAAK;MAC9B,IAAI;QAAEC;MAAW,CAAC,GAAG,IAAI,CAACD,KAAK;MAE/BC,UAAU,GAAGA,UAAU,CAACK,IAAI,EAAE;MAE9B,IAAGJ,OAAO,CAACK,OAAO,CAACN,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;MACvC,MAAMO,YAAY,GAAG,CAAC,GAAGN,OAAO,CAAC;MAEjC,IAAI,CAACO,QAAQ,CAAC;QACVP,OAAO,EAAE,CAAE,GAAGM,YAAY,EAAEP,UAAU;MAC1C,CAAC,CAAC;IACN,CAAC;IAAA,KAEDS,YAAY,GAAIN,CAAC,IAAK;MAClB,IAAI,CAACK,QAAQ,CAAC;QACVR,UAAU,EAAEG,CAAC,CAACO,MAAM,CAACC;MACzB,CAAC,CAAC;IACN,CAAC;EAAA;EAlCDC,iBAAiB,GAAG;IAChB,MAAMX,OAAO,GAAGY,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAE3D,IAAG,CAACf,OAAO,EAAE;IAEb,IAAI,CAACO,QAAQ,CAAC;MAACP;IAAO,CAAC,CAAC;EAC5B;EAEAgB,kBAAkB,CAACC,SAAS,EAAE;IAC1B,MAAM;MAACjB;IAAO,CAAC,GAAG,IAAI,CAACF,KAAK;IAE5B,IAAIE,OAAO,KAAKiB,SAAS,CAACjB,OAAO,EAAE;IAEnCc,YAAY,CAACI,OAAO,CAAC,SAAS,EAAEN,IAAI,CAACO,SAAS,CAACnB,OAAO,CAAC,CAAC;EAC5D;EAsBAoB,YAAY,CAAClB,CAAC,EAAEmB,KAAK,EAAE;IACnB,MAAM;MAAErB;IAAQ,CAAC,GAAG,IAAI,CAACF,KAAK;IAC9B,MAAMQ,YAAY,GAAG,CAAC,GAAGN,OAAO,CAAC;IACjCM,YAAY,CAACgB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAE7B,IAAI,CAACd,QAAQ,CAAC;MACVP,OAAO,EAAE,CAAC,GAAGM,YAAY;IAC7B,CAAC,CAAC;EACN;;EAEA;EACAiB,MAAM,GAAG;IACL,MAAM;MAAExB,UAAU;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACF,KAAK;IAE1C,oBACI;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACnB;QAAK,SAAS,EAAC,WAAW;QAAA,wBACtB;UAAA,UAAI;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eACb,QAAC,QAAQ;UAAC,QAAQ,EAAE;QAAM;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QACpC,eACN,QAAC,IAAI;QACL,YAAY,EAAE,IAAI,CAACG,YAAa;QAChC,YAAY,EAAE,IAAI,CAACO,YAAa;QAChC,UAAU,EAAE,IAAI,CAACT;MAAW;QAAA;QAAA;QAAA;MAAA,QACpB,eAER,QAAC,IAAI;QACL,OAAO,EAAEC,OAAQ;QACjB,YAAY,EAAE,IAAI,CAACoB,YAAY,CAACpB,OAAO;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAEjD;EAId;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}